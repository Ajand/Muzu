type Artist @entity {
  id: ID!
  balance: BigInt!
  name: String
  bio: String
  tracks: [Track!]! @derivedFrom(field: "artist")
  joinedAt: BigInt!
}

type Track @entity {
  id: ID!
  artist: Artist!
  name: String!
  content: String!
  cover: String!
  royaltyFee: Int!
  royaltyReceiver: String!
  createdAt: BigInt!
  supply: BigInt!
  minted: BigInt!
  mintPrice: BigInt!
}

type Token @entity {
  id: ID!
  track: Track!
  owner: User!
  mintedAt: BigInt!
}

type User @entity {
  id: ID!
  tokens: [Token!]! @derivedFrom(field: "owner")
}

type MoneyTransfer @entity {
  id: ID!
  amount: BigInt!
  track: Track
  from: User
  to: Artist
}

type Ask @entity {
  id: ID!
  test: String!
  test2: String!
  token: Token!
  track: Track!
  price: BigInt!
  asker: User!
  finalized: Boolean!
}
